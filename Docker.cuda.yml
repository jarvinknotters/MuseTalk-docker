# Use the official PyTorch image with CUDA support as a base
FROM pytorch/pytorch:2.0.1-cuda11.7-cudnn8-runtime

# Set the environment to non-interactive to avoid prompts
ENV DEBIAN_FRONTEND=noninteractive

# Install necessary packages including git, git-lfs, wget, and other dependencies
RUN apt-get update && \
    apt-get install -y git git-lfs wget libgl1-mesa-glx libglib2.0-dev && \
    git lfs install && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Set the working directory
WORKDIR /app

RUN wget https://www.johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz && \
    tar -xvf ffmpeg-release-amd64-static.tar.xz && \
    rm ffmpeg-release-amd64-static.tar.xz && \
    ffmpeg_dir=$(find /app -maxdepth 1 -type d -name "ffmpeg-*" 2>/dev/null) && [ -n "$ffmpeg_dir" ] && mv "$ffmpeg_dir" /app/ffmpeg || echo "FFmpeg directory not found." && \
    echo 'export FFMPEG_PATH=/app/ffmpeg' >> ~/.bashrc && \
    source ~/.bashrc && 


# Clone the DWPose repository from Hugging Face
RUN GIT_LFS_SKIP_SMUDGE=1 git clone https://huggingface.co/yzd-v/DWPose.git /app/models/dwpose && \
    cd /app/models/dwpose && \
    git lfs pull

# Clone the SD-VAE-FT-MSE repository from Hugging Face
RUN GIT_LFS_SKIP_SMUDGE=1 git clone https://huggingface.co/stabilityai/sd-vae-ft-mse.git /app/models/sd-vae-ft-mse && \
    cd /app/models/sd-vae-ft-mse && \
    git lfs pull

# Download the face-parse-bisent model and dependencies using wget
RUN mkdir -p /app/models/face-parse-bisent && \
    wget -O /app/models/face-parse-bisent/79999_iter.pth 'https://drive.usercontent.google.com/u/0/uc?id=154JgKpzCPW82qINcVieuPH3fZ2e0P812&export=download' && \
    wget -O /app/models/face-parse-bisent/resnet18-5c106cde.pth 'https://download.pytorch.org/models/resnet18-5c106cde.pth'

# Download the whisper model
RUN mkdir -p /app/models/whisper && \
    wget -O /app/models/whisper/tiny.pt 'https://openaipublic.azureedge.net/main/whisper/models/65147644a518d12f04e32d6f3b26facc3f8dd46e5390956a9424a650c0ce22b9/tiny.pt'

# Clone the MuseTalk repository from Hugging Face
RUN rm -rf /app/models/musetalk && \
    mkdir -p /app/models/musetalk && \
    GIT_LFS_SKIP_SMUDGE=1 git clone https://huggingface.co/TMElyralab/MuseTalk && \
    cd /app/models/musetalk && \
    git lfs pull

RUN cd / && \
    git clone --depth 1 --single-branch --branch main https://github.com/jarvinknotters/MuseTalk-docker.git && \
    cp -rn /MuseTalk-docker/.[!.]*   /app/ && \
    cp -rn /MuseTalk-docker/* /app/ && 
    rm -rf /MuseTalk-docker

# Install the required Python packages
RUN pip install --no-cache-dir -r requirements.txt

# Install specific mm lab packages
RUN pip install --no-cache-dir -U openmim && \
    mim install mmengine && \
    mim install "mmcv-full==1.7.1" && \
    mim install "mmdet==3.1.0" && \
    mim install "mmpose==1.1.0"

# Expose the necessary port 
EXPOSE 7866

# Command to run your application
CMD ["cd", "/app", "&&", "python3", "app.py"]
